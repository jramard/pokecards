workflows:
  ionic-capacitor-android-workflow:
    name: Ionic Capacitor Android Workflow
    max_build_duration: 120
    instance_type: mac_mini
    environment:
      vars:
        # Android Keystore environment variables
        FCI_KEYSTORE_PATH: /tmp/keystore.keystore
        FCI_KEYSTORE: Encrypted(Z0FBQUFBQmd6R0ZLejZPbVlzcXRiWWNxNEJjTVZYU0NMSVFrYVVFREZsOEIwNEcyU0VraFMtMnhjMWJqNG1TZGdKVEJITEFVS0FPSUdpeGd3YlBLNk9wWmUzRGkyN1VJdXhHd0J4Tnpka09ndS1yVmVGb2N0VHJVQWxuVER6bDZmV1RmS0Rnc0xJV19aakJaTGZjNmRRRmUtTFhydmN1RnRjWkZyNTJ0T2tQQXZOLTJGWHNFYTRsTy1nOFp6SHNLS0wtODFDS0QtRTZnOUQ2QXI5SzRXWlp0MHk5Y0MtbGNqLVdKZDJQamtlYmNKUzJMLXhpRWJVTHh4YjJyYjdIcFJDaEJ1c29yUkZDUTJsR3loeTlWaE1pcWE2VTVQWmNadUVkTzBmejBoSURzQ3RXVDFmdERHS2VVYXVURlFHWWNUZjRpM1Z5X2lUdE5hTzFtODZ6Smp3bWJ4Nmhvby14VFpwaGRjRGFoaEd3NE9taGxJYS1za2gxQVNLSEx1WWp0ckJBdDBPRlBXdHVTOGJTNlRGWFFGNHlhT01xT1U2Nk8wTXVMMkV3bUJuZElPMHhGc0ZIMUQ0bXpDMUptX1pMVFdJdFltWENSaE96V05ueDZLclA2bmJmSkhLRF9pZVJzSTFUdVhLR1FaUmxkZEdnRDdZczNUTzBSRkNVWlpKdTlGX3V0Mk9VSHkzcWludV92X0RrVjJYYzd1VlFrcWY0cXpIVGNkdDFhMFZ4YWQ5aVZ3UnBZQW5WSkpodzBlcGV2SmFnTk93ZlRGclcxYzFGT3VIMGxxOXRGYXROVlhjM1Vqa0FsTC1HOVVaUDRoTThxMFhCNDU2M2ZGUVdOU0hxMmRiQTVvbEctT1RPaWUwUm1xVm1sa0w4U096Vk9fenREVzZmcUYxMGVnVFp3RUFYUHhJamZ2ejc5d2FoQkU1SUJHRktOeXJHSVYzaElzaXh6RXZuQzhOcTRMdllPTmhBWE1oVUowVnBDbDkwSGtDcF9xOTZucXNWOFZrQzlDbmRCWVptM3EyaUQwSW1HSWxHSm9IOUhZQ1Y5TlRXa0tsOEVNT0ZfeVhtdUg2Q3VWRnBHTW9DRWQyNEphazhIZ0tIRnJlcFFWZVhYVVNDWnA5c04yZ0FoVkstRWJWbUNUazJuZWliTWhFTXlOalJrSU1nV3QzM3FWMmcwdTFQS1A5SlY1SjBKajBSV2pOVFYySVBpTHJPQ29oVC1mczZGM2tpRGpPeS1QTGVlUWlLS3lnNGZVbEJXTEw3MHVhRnFTLTRid0VSZ1FjbEdGTTNGOGhsYllNWlRiSVUtSDctYkRRcFEwVmE4S0tPTGwtVUVOTHJoeE9jLVMxeXBSamJYbGN2MG1Na3U1ZDU1N296eDBUYlVlSHJIU01BdUVVdjdEVmdJU1pEV2twTnFfLWZ5YVpLV3pKbFRGQ3J6amZ5VjBldG5qZjJ1cEFiODhiUWl3VUhXQUJseGdpZ3ZTX203T0txai1PUF9VbjFzV1N2d2lQbkZrRkJvMHgtZXJiRlU0a1dSREk0eEhEdzdiYzNpMU5LUUphcHl0ZE5yNks3dlRTUGp5elRicC00R0NZRy1vSFpLUHI1VVUxT0ZZUF9CTVFnRFFOSTNtRGtzeVNocE1FYUl4dWxFOFFsQnN4YXJLT2hxNG5nbUlyUGxxZUkwTlI0aU1KVDM2WWM4bXZjVjR3MTRWWlFVQ0hMUlk3c0dzdkMtd3FhRXN5YS1SZ19EeTR0SnppeWpBRTdEX0hxeWRoOFRVYUVZcXBWcWM0SVR0a2hHS0JONGhZdlQ0eldsT2Z5V1lZbVVQOXFvRFJWTTE3M2Rsc19oQlZCSWw2T2Z6LUdHSzhPVmp5MUJUS09RTlB4dWVIdG9BVGVVMVcxZTQ5ZFkzWjZtcW9ZWHozLUlFMUg5NHpDVTJoOTVMV3JCLWp2OGZ2YWJucmNzYnowcmNCRWhkS2J4UnhzQm5OYWc3bDJqYkNydlFBcDc4d2NEbERVeGxfOU1uVHlhT1Y4OEdRcmlsdW41MnlxOWdSS0ZTdkZWWXBjVDd0d3dVRDRuUUJqbmd1QVpISkxkd0JuU0lzbGhTcHNncnUyQVRKREF5WVNnT3BCVHRsM29HY1RvWk5ubFg4MXhydUpOVjJsN2p4QUtNTG94UC1jcEF6SDFJU00xeGt1S3ZTMFFGakhLTE9tSnZaYXBzSW81VklGVXpHc0tmRmxiVjhXdVNPZjVSLXloSzhYZTZiN0Y0Wk0wTGFKU21XYTNra1N0NWIyTFlyTWl3THVxc2FQblozSGxiOWpwZXppTjMybnpsc1FZbWZNekNLQUxMSmUzYUpBeklSZDFEOW5FbDZtRVZMbjhBQUxqaTJWSzRna1lxbGFyS24tRG81QTFWQ3kyU2x5TGtQZmR4cDRzUHdpMDdZQU5ZSmNEZ1BsOF9ybWFyN2Zka1ltVlhTMnRBdDl1Qk5lZGhPUXVTdGlrcDRMbWVESG5Pb2l2Q01ja2YtTUNFUVZnTVoyb3gyNE1yODI0RVktRTNfNGhpbFRZOEVoemN2a3dsdlpMUmx2RldicFBuWlEwVnpveXVXaXVELVdJQVgzZ3M2T3M0TUxMMmFtWWtQbGMxVVdwTTdVSnM3YWNLS09YSF83VG0tYy1lTmtWSXlWWFM5VXdyc05aOHY3allYYlMwTkxMXzFwX0lLN08xd0NCNTk1Z2tkT0JLelBjUlVkZ2tyTjZoVmgyMzlJelBDeTVxZ1dJSzJOR3A2VkdzVlhMVVdheElzUHpoYnVyTEg5djdheU12R29pSVY1aVpfMGFqUVhoNFBnVTJDT1JNdHB1SlRsbHJHdFdPdEFGS0FPSnV6M3hzaEJlUDllR3kwS3Rnb2dMVUhBNWZtUkJHX1gySHJyVWY4UXNPWFBic3pYa1k3eWNGcjhZdTloQVdVbDUyckdjU3hjWWMzQUV1bE94QjFqRWM3M3hIWDZzUlAwd09RVlZxZXdoWkJuVktsQVZkY21OZGhheWZPWVVUZTVhYkFFNW9iXzYxVWd2QnNDZ0VETFZ4QkN6b2J6UGpHdWxZc1VVaFM4bTRnM2tQOUQzZ3A0Z3BZOHd0ZEU0WF9BR3UtTzBEOXI2bnlKdFlNeEpJeFdrWEtMN1MxOURZRl85d0pJSTFiZ1A4WFNQWnpqa1NDZ0tINi1uZlI1TXM0OG4xTDEwTWp4bXhneUI4Z2t0TTkxSTRGWHNOd19aNHZ4Nm1zdWM4TXU2bjYteUFqVnFKclJhLUhmZUl2dmNHRU01V3VOdnl4X1lLcm5OeUE0d0FzTXJoR1VfMEpuR2htY1cxdG5VWFZYcTFUMVlKdU5NbWF4bENWSURlNTJjXzY0ODJidGxPVDA5UGNoRVNlY3N3b2xOREM2VGNLdGFIb2YtcUlQeW5WRm5qYWVIYzNBb3A3M01UZlF1RUxOUDJXQzBnY3MtLTA2TjVLYVlZcWNoXzZDY3EtWDJuc2pJZVJWeEU5YjQ3aVBMX0ZocVZCMHNQZHozbFlkbVJNZDlBOUpuaUhjellyMFd3TlBjczUtei1sbmw5RE80T2dmM2ZBamZfZHprVUxnNUtaNW5Ub2xaVkU4Q0ZVQzlLN2cteWNrLVZCbmhhU0tqMEc4SEtpcm56ejBTODlNc3pTTldianUyVlVKbzZ3UlZhLVdsNzlqeER3eEZDckJuVTRraUpNTjNfaTRzWE1ZRjFPNm5ZMWdLZ0ZidmdhRWN1cWxDS1JpRHBCS0EyZy1lWVJieXNnYzB6MWlHMzBZODNjMTJfNTJqcTFYRVRRV2J4ekhhTU5mTm1lVW1XcWFONFVkdGZkWTlFalVJN05nWXNLMHRGMVBmbU1JTEk2TERLVjFlN0ZwUXppbzZKM3FHbzY0QjEzWkZCSzhmdGVTMVlkblBaRkNkUzNSTTRNNTVUUnBDa2RjbUgwc210V0ktWk05WWx6M3FhVzNvdFd1dFo1VXFKOEZ2bHBFVGxHWFpvS29xNlJPSjhJTjB5NEIxTmt2Y2xuNnFyYVVHYlpFdEFNS3ZiUHhuUjFuakF1SHhESXl0OVNKX2VKN1IxUDkzempVa01HR3FpY3JRamoxNUcwbzNXS1lrUlpQSFdIZ2ZMQXlZdUZqV2drUTB1NDBrbEtid0N4S0tXbFMxTk1CdkE1Vy1oZEhmUlZDWkVjdEdDYURLT0tfTUlKMFlOdkI2MTBJVFZ1ZUFMUU5zdGk5b211eUxxQmMzb0lxUEVBZm5sbUZybnd4VTFkQU9aZWZTaGNkUjFTVWthcGJ3bFhOMHg3SGdtM1ZFLVZqRzJSSHpSSzlLbE9Gckpqd1JIY0NxWjV2MzhUSy1LSVB5Q1JUTkdUNUVxMjlzN0ZLQW1hOVZSanZpazBhdHExU1VyQ092SzBjQW9HUVRzVk5qR1hiV0NURUxfSEZNb2V4NEk3cGFwZUF3TXp3UVVDalcyVGJlTGdKTVFWY2ZObGFQeTB1S0VyV0hLcnEzUXF3WmhVT0gxWVA3SkJNbzZ0dUk2TGZWcXNoSExIT2c5UExTd2lKcHZaR211ZkNwbm1XZS1TRGM4MDJJZEx6VFlPZEMzendnejVITXpqaWdtbTRpTmkyaUlyVVpjOVNWWjRWOGFyZzNsZ2haRHdaQU9NZDI2ekZXMmdmZVNzejZFTnVZblRETHFEUVpORWVIaERGLVlldkEwQmdnVUtfWkpTZFhsTUVTdjhFUDVxTGJ3dnRXaW9PQ3FqbkptcEZaWjBobnFqZDRUYU1kaEtQNUpzT0VkbUVfVzBONGhncVRNbGlhVzRHXzZTTzlJaUVuRUJ2RGs5d0ttWmJFNWJWajk2OVNYcmVoRnJMS05WX2tkWVN6SElYeUJ0ZGRqR1R3bTRoWGZWRzhIWWlsWWpWVkRCaEtpd2s3YTRHbzVWU0diLUxvd2ZCOG53ZU1uTEVOSXctVGJlcHg0WnBPVktzQWhYX08xeUJaNnRoOTBvOUNCYlVwZTFab1NGSEpqYjQwQkxoMTZ3RVdwc3gyQ3JNRUhUVkZhV0VwaUtGMVVaN1drNG5fcVF1QXZJa2xZc3BKcHZFRUZnODlzLW5ZTVktM3FQTDJBdDduVUNRbTlfS1dYR2VWVlpBdU9IQktzOU56T0ZsdmhaYk1mekxMd2NkS3hENF9MdFVCVDFYZzlGS3dZZ3BQT2phWHB0Wk1PMWpEY0JzLUZRMk12Qm5jTkVMYnRibDJZRTNmS0dkZWZndDZJckVkcWVzMlhNTGh6RnBVdmdGTGNsMVQwUmhSeDlmbld3bnBWNzJsSk92WnBYaXR5UW1YMllBdnBfOXNwMXdQVGhMR2NGbWJWa25aS3NudVNkQlpOa1A4ZG1TZUVLWnBiTi0tZlc5M1BISFBzU290V2VmbTVtU0M2UDlMZWJGSEVHaWlPeFg2MktnbHZRdWRyWkdlYnRCT2tJMHlYWmJWVWNLUjFQRHZPTF8xMDhpQUJTVi1wdktvT3JLZnZHSllhZlJ2eEhjdGJUazRhWW9MQV85VjR3QUplWFE5eW9Lc2QwWnF2REQ1ekc2TjJHRDM5U3dKR1IzUWRtYnpvTVBjMDBudWZYYlN1dmViLUlqVlJWdXJfUUtMTDdqLWFTdTJtZnNuX0ZTR0psb1ZpX0lZejBBeU5rSXFGc3ctOFgzZUcyWXJrZzFZazJIeU53azNTaUVVU1JJdUxoQ1dyTHF1NW5nMDZqVkVKWTBKb0JFNXN5QktYTm54XzFBUzVxZlgwVHhUak96QUNDSWZqd1NyVTRFUkJ5aW02dWQ1VFhOVTZIOWJqZWxXYkJVLU5GVV9yM042NTV6d0xpME9YSjY5MENvTDZNNVRjOFBXeG05SEZEdlhxNnNzWmM1YVo2OVVvTnl5WnRmc3dfdXlySTR5QVU5Z2ZkRDVCenlIdjZyVGsxRVJQLVNwYXpncDk3eGVZQklrSmxaUmZzdnlLLWw2VmpRZ0UtdGZhdlRGUVViVWxMMFpjTEFTS2tiVmFpWU94YnowWXlDMDI2MWVaejZ1N0N0SVBra19vWHhGSFl4bno0UkdoOU9za2tCUnlWWGpnaUI1cVFYc3V1N1ZzMWRub244YWhITkFWaUdGYWhCWVd4Qkt2ZlRsZ0k2X3NPRHdGSnpOV2lFYlhTQ3FXclVFTkNCb3drZFpONkgtMG1Wd1RzOFBCbWxiUGx1WGlYRUhzRkpNby1mS29NMVFBd3NET0tGMlFMaWdIMUIycVBydQ==) # <-- Put your encrypted keystore file here
        FCI_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmd6R0RfZi1yMldEdHZKVkdHWS1DNFJrQkprWnhReU83MW0tV1VWbVlVNDZId1JOaXZxOE0wQkJtcEhzUEVnc3JmNDJKU0k1eUZiUHEtY1JpQzNjdnJJa0RZeUE9PQ==) # <-- Put your encrypted keystore password here
        FCI_KEY_PASSWORD: Encrypted(Z0FBQUFBQmd6R0RfZi1yMldEdHZKVkdHWS1DNFJrQkprWnhReU83MW0tV1VWbVlVNDZId1JOaXZxOE0wQkJtcEhzUEVnc3JmNDJKU0k1eUZiUHEtY1JpQzNjdnJJa0RZeUE9PQ==) # <-- Put your encrypted keystore alias password here
        FCI_KEY_ALIAS: Encrypted(Z0FBQUFBQmd6R0RMR3g2b3JaMHdTN195MjBqX2FHejBhdTBiWkVDRXE5bWtCMWg4OGRRRGlaMGQ1WWp1a2I4TEVqcGRHYnM1SG1DbHNrZmVkcFRGXzg2dGVnblEyLS1wa2c9PQ==) # <-- Put your encrypted keystore alias username here
      node: latest
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: master
          include: true
          source: true
    scripts:
      - name: Install npm dependencies for Ionic Capacitor project
        script: |
          npm install
      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/android/local.properties"
      - name: Set up keystore
        script: |
          echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
          cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
          storePassword=$FCI_KEYSTORE_PASSWORD
          keyPassword=$FCI_KEY_PASSWORD
          keyAlias=$FCI_KEY_ALIAS
          storeFile=/tmp/keystore.keystore
          EOF          
      - name: Update dependencies and copy web assets to native project
        script: |
          ionic build
          # npx cap copy # <- use this is you don't need to update native dependencies
          npx cap sync # <- update native dependencies and copy web assets to native project          
      - name: Build Android release
        script: |
          cd android
          ./gradlew assembleRelease          
    artifacts:
      - android/app/build/outputs/**/*.apk
    # publishing:
    #   google_play:
    #     credentials: Encrypted(...) # <- Put your encrypted JSON key file for Google Play service account
    #     track: internal
    #   email:
    #     recipients:
    #       - user_one@example.com
    #       - user_two@example.com
    #     notify:
    #       success: true     # To not receive a notification when a build succeeds
    #       failure: false     # To not receive a notification when a build fails

  ionic-capacitor-ios-workflow:
    name: Ionic Capacitor iOS Workflow
    max_build_duration: 120
    instance_type: mac_mini
    environment:
      vars:
        # Ionic Capacitor Xcode worskspace and scheme
        XCODE_WORKSPACE: "ios/App/App.xcworkspace"
        XCODE_SCHEME: "App"
        # Manual Code Signing
        # FCI_CERTIFICATE: Encrypted(...) # <-- Put your encrypted certificate file here
        # FCI_CERTIFICATE_PASSWORD: Encrypted(...) # <-- Put your encrypted certificate password here
        # FCI_PROVISIONING_PROFILE: Encrypted(...) # <-- Put your encrypted provisioning profile here
        #
        # Automatic Code Signing 
        # https://docs.codemagic.io/yaml/distribution/
        # https://appstoreconnect.apple.com/access/api
        APP_STORE_CONNECT_ISSUER_ID: 5a451239-51eb-10b6-bfcc-60e61ddab13c # <-- Put your App Store Connect Issuer Id here
        APP_STORE_CONNECT_KEY_IDENTIFIER: LY55E1G322 # <-- Put your App Store Connect Key Identifier here
        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # <-- Put your App Store Connect Private Key here
        CERTIFICATE_PRIVATE_KEY: Encrypted(...) # <-- Put your Certificate Private key here
      node: latest
      xcode: latest
      cocoapods: default
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: develop
          include: true
          source: true
    scripts:
      - name: Install npm dependencies for Ionic project
        script: |
                    npm install
      - name: Cocoapods installation
        script: |
                    cd ios/App && pod install
      - name: Update dependencies and copy web assets to native project
        script: |
          # npx cap copy # <- use this is you don't need to update native dependencies
          npx cap sync # <- update native dependencies and copy web assets to native project          
      - name: Set up keychain to be used for code signing using Codemagic CLI 'keychain' command
        script: |
                    keychain initialize
      # - name: Set up Provisioning profiles from environment variables (Use with manual code signing)
      #   script: |
      #     PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
      #     mkdir -p "$PROFILES_HOME"
      #     PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
      #     echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
      #     echo "Saved provisioning profile $PROFILE_PATH"
      - name: Fetch signing files
        script: |
          # app-store-connect fetch-signing-files "com.nevercode.ncionicapp" --type IOS_APP_STORE --create
          app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) --type IOS_APP_STORE --create          
      - name: Add certificates to keychain
        script: |
                    keychain add-certificates
      - name: Increment build number
        script: |
          #!/bin/sh
          set -e
          set -x
          cd $FCI_BUILD_DIR/ios/App
          agvtool new-version -all $(($BUILD_NUMBER +1))          
      - name: Set up code signing settings on Xcode project
        script: |
                    xcode-project use-profiles
      - name: Build ipa for distribution
        script: |
                    xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
    artifacts:
        - build/ios/ipa/*.ipa
        - /tmp/xcodebuild_logs/*.log
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      app_store_connect:
        apple_id: yourAppleId@example.com # <- put your Apple Id here
        password: Encrypted(...) # <-- Put your App Specific Password. For more information visit: https://support.apple.com/en-us/HT204397
      email:
        recipients:
          - user_one@example.com
          - user_two@example.com
        notify:
          success: false     # To not receive a notification when a build succeeds
          failure: false     # To not receive a notification when a build fails
