workflows:
  ionic-capacitor-android-workflow:
    name: Ionic Capacitor Android Workflow
    max_build_duration: 120
    instance_type: mac_mini
    environment:
      vars:
        # Android Keystore environment variables
        FCI_KEYSTORE: Encrypted(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) # <-- Put your encrypted keystore file here
        FCI_KEYSTORE_PASSWORD: Encrypted(testkey) # <-- Put your encrypted keystore password here
        FCI_KEY_PASSWORD: Encrypted(testkey) # <-- Put your encrypted keystore alias password here
        FCI_KEY_ALIAS: Encrypted(upload) # <-- Put your encrypted keystore alias username here
      node: latest
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: master
          include: true
          source: true
    scripts:
      - name: Install npm dependencies for Ionic Capacitor project
        script: |
                    npm install
      - name: Set Android SDK location
        script: |
                    echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/android/local.properties"
      - name: Set up keystore
        script: |
          echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
          cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
          storePassword=$FCI_KEYSTORE_PASSWORD
          keyPassword=$FCI_KEY_PASSWORD
          keyAlias=$FCI_KEY_ALIAS
          storeFile=/tmp/keystore.keystore
          EOF          
      - name: Update dependencies and copy web assets to native project
        script: |
          # npx cap copy # <- use this is you don't need to update native dependencies
          npx cap sync # <- update native dependencies and copy web assets to native project          
      - name: Build Android release
        script: |
          cd android
          ./gradlew assembleRelease          
    artifacts:
      - android/app/build/outputs/**/*.apk
    # publishing:
    #   google_play:
    #     credentials: Encrypted(...) # <- Put your encrypted JSON key file for Google Play service account
    #     track: internal
    #   email:
    #     recipients:
    #       - user_one@example.com
    #       - user_two@example.com
    #     notify:
    #       success: true     # To not receive a notification when a build succeeds
    #       failure: false     # To not receive a notification when a build fails

  ionic-capacitor-ios-workflow:
    name: Ionic Capacitor iOS Workflow
    max_build_duration: 120
    instance_type: mac_mini
    environment:
      vars:
        # Ionic Capacitor Xcode worskspace and scheme
        XCODE_WORKSPACE: "ios/App/App.xcworkspace"
        XCODE_SCHEME: "App"
        # Manual Code Signing
        # FCI_CERTIFICATE: Encrypted(...) # <-- Put your encrypted certificate file here
        # FCI_CERTIFICATE_PASSWORD: Encrypted(...) # <-- Put your encrypted certificate password here
        # FCI_PROVISIONING_PROFILE: Encrypted(...) # <-- Put your encrypted provisioning profile here
        #
        # Automatic Code Signing 
        # https://docs.codemagic.io/yaml/distribution/
        # https://appstoreconnect.apple.com/access/api
        APP_STORE_CONNECT_ISSUER_ID: 5a451239-51eb-10b6-bfcc-60e61ddab13c # <-- Put your App Store Connect Issuer Id here
        APP_STORE_CONNECT_KEY_IDENTIFIER: LY55E1G322 # <-- Put your App Store Connect Key Identifier here
        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # <-- Put your App Store Connect Private Key here
        CERTIFICATE_PRIVATE_KEY: Encrypted(...) # <-- Put your Certificate Private key here
      node: latest
      xcode: latest
      cocoapods: default
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: develop
          include: true
          source: true
    scripts:
      - name: Install npm dependencies for Ionic project
        script: |
                    npm install
      - name: Cocoapods installation
        script: |
                    cd ios/App && pod install
      - name: Update dependencies and copy web assets to native project
        script: |
          # npx cap copy # <- use this is you don't need to update native dependencies
          npx cap sync # <- update native dependencies and copy web assets to native project          
      - name: Set up keychain to be used for code signing using Codemagic CLI 'keychain' command
        script: |
                    keychain initialize
      # - name: Set up Provisioning profiles from environment variables (Use with manual code signing)
      #   script: |
      #     PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
      #     mkdir -p "$PROFILES_HOME"
      #     PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
      #     echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
      #     echo "Saved provisioning profile $PROFILE_PATH"
      - name: Fetch signing files
        script: |
          # app-store-connect fetch-signing-files "com.nevercode.ncionicapp" --type IOS_APP_STORE --create
          app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) --type IOS_APP_STORE --create          
      - name: Add certificates to keychain
        script: |
                    keychain add-certificates
      - name: Increment build number
        script: |
          #!/bin/sh
          set -e
          set -x
          cd $FCI_BUILD_DIR/ios/App
          agvtool new-version -all $(($BUILD_NUMBER +1))          
      - name: Set up code signing settings on Xcode project
        script: |
                    xcode-project use-profiles
      - name: Build ipa for distribution
        script: |
                    xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
    artifacts:
        - build/ios/ipa/*.ipa
        - /tmp/xcodebuild_logs/*.log
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      app_store_connect:
        apple_id: yourAppleId@example.com # <- put your Apple Id here
        password: Encrypted(...) # <-- Put your App Specific Password. For more information visit: https://support.apple.com/en-us/HT204397
      email:
        recipients:
          - user_one@example.com
          - user_two@example.com
        notify:
          success: false     # To not receive a notification when a build succeeds
          failure: false     # To not receive a notification when a build fails
